{"remainingRequest":"D:\\Projects\\Chat app\\libak-chat\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\Projects\\Chat app\\libak-chat\\src\\components\\LibakChat.vue?vue&type=style&index=0&id=7ce0c5e7&scoped=true&lang=css","dependencies":[{"path":"D:\\Projects\\Chat app\\libak-chat\\src\\components\\LibakChat.vue","mtime":1636802541400},{"path":"D:\\Projects\\Chat app\\libak-chat\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Chat app\\libak-chat\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Projects\\Chat app\\libak-chat\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Projects\\Chat app\\libak-chat\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Chat app\\libak-chat\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltZyB7CiAgICB3aWR0aDogNSU7Cn0KQG1lZGlhIChtYXgtd2lkdGg6IDk5MS45OHB4KXsKICAgIGltZyB7CiAgICAgICAgd2lkdGg6IDE1JQogICAgfQogICAgI3BpY2tSb29tRGlhbG9ndWUgewogICAgICAgIG1hcmdpbi10b3A6IDBweCAhaW1wb3J0YW50CiAgICB9CiAgICAjY2hhdGJveCB7CiAgICAgICAgaGVpZ2h0OiA2NXZoICFpbXBvcnRhbnQKICAgIH0KfQo="},{"version":3,"sources":["D:\\Projects\\Chat app\\libak-chat\\src\\components\\LibakChat.vue"],"names":[],"mappings":";AAgIA,CAAC,CAAC,EAAE;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACb;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,EAAE;QACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACb;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B;AACJ","file":"D:/Projects/Chat app/libak-chat/src/components/LibakChat.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"columns\">\n        <div class=\"column is-2\" style=\"background-color: #a01af3;\">\n            <aside class=\"menu\">\n                <ul class=\"menu-list\">\n                    <div class=\"container subtitle\" style=\"padding: 5px\">\n                        <li>\n                            <button class=\"dropdown-item button\" @click=\"pickRoom(2021)\" :disabled=\"OldRoomID == 2021\">Opptemom Prime</button>\n                        </li>\n                        <li>\n                            <button class=\"dropdown-item button\" @click=\"pickRoom(2025)\" :disabled=\"OldRoomID == 2025\">Cocomelon</button>\n                        </li>\n                        <li>\n                            <button class=\"dropdown-item button\" @click=\"pickRoom(2030)\" :disabled=\"OldRoomID == 2030\">Flazymama</button>\n                        </li>\n                        <li>\n                            <button class=\"dropdown-item button\" @click=\"pickRoom(2050)\" :disabled=\"OldRoomID == 2050\">Red Horse</button>\n                        </li>\n                        <li>\n                            <button class=\"dropdown-item button\" @click=\"pickRoom(2075)\" :disabled=\"OldRoomID == 2075\">Only judge can god me</button>\n                        </li>\n                    </div>\n                </ul>\n            </aside>\n        </div>\n        <div class=\"column\" v-if=\"!roomPicked\"><h1 class=\"title has-text-centered\" id=\"pickRoomDialogue\" style=\"margin-top: 50vh\">Pick a room to start chatting!</h1></div>\n        <div class=\"column\" v-if=\"roomPicked\">\n            <div class=\"box\" id=\"chatbox\" style=\"width: 100%; margin: auto; height: 94vh; overflow: auto;\">\n                <div class=\"container\" v-for=\"(message, index) in messages\" :key=\"index\">\n                    <div class=\"has-text-centered\">\n                        <span\n                            v-if=\"message.hostMsg != null\"\n                            class=\"notification has-text-info\"\n                        ><b>{{ message.hostMsg }}</b></span>\n                    </div>\n                    \n                    <div v-if=\"message.message != null\" class=\"content\" >\n                        <h3 ><img :src=\"message.userpic\">\n                            <b>{{ message.user }}: {{ message.message }}</b><br/>\n                        </h3>\n                    </div>\n                </div>\n            </div>\n            <div class=\"field has-addons\" >\n                <p class=\"control\" style=\"width: 100%;\">\n                    <input\n                        type=\"input\"\n                        class=\"input\"\n                        v-model=\"input\"\n                        placeholder=\"Type something...\"\n                    />\n                </p>\n                <p class=\"control\">\n                    <button\n                        class=\"button is-info\"\n                        type=\"button\"\n                        :disabled=\"input == ''\"\n                        @click=\"sendMessage(this.input)\"\n                    >Send</button>\n                </p>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport socket from '../socket'\n\nexport default {\n    name: 'LibakChat',\n    created() {\n        document.addEventListener('beforeunload', this.disconnect)\n    },\n    mounted() {\n        socket.connect()\n        socket.on('chat message', (msg, user, userpic) => {\n            this.messages.push({\n                user: user,\n                message: msg,\n                userpic: userpic\n            });\n            setTimeout(()=> {this.scrollBottom()}, 100)\n        });\n        socket.on('host message', (hostMsg, roomNo) => {\n            this.messages.push({\n                hostMsg: hostMsg\n            });\n            this.OldRoomID = roomNo\n        });\n    },\n    data() {\n        return {\n            messages: [],\n            hostMessage: [],\n            currentUser: this.$store.state.username,\n            input: '',\n            imgPreUrl: 'https://avatars.dicebear.com/api/micah/',\n            extUrl: '.svg',\n            roomPicked: false,\n            OldRoomID: ''\n        }\n    },\n    methods: {\n        disconnect() {\n            socket.disconnect();\n        },\n        pickRoom(room) {\n            socket.emit('join room', room, `${this.currentUser} has joined the room.`)\n            this.messages = []\n            this.roomPicked = true\n            if(this.OldRoomID) {\n                socket.emit('leave room', this.OldRoomID, `${this.currentUser} has left the room.`)\n            }\n        },\n        sendMessage(msg) {\n            let userpic = this.imgPreUrl + this.currentUser + this.extUrl\n            socket.emit('message', msg, this.currentUser, userpic)\n            this.input = ''\n        },\n        scrollBottom(){\n            let el = document.getElementById('chatbox')\n            el.lastElementChild.scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\n        }\n    }\n}\n</script>\n\n<style scoped>\nimg {\n    width: 5%;\n}\n@media (max-width: 991.98px){\n    img {\n        width: 15%\n    }\n    #pickRoomDialogue {\n        margin-top: 0px !important\n    }\n    #chatbox {\n        height: 65vh !important\n    }\n}\n</style>"]}]}